import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.scss';
import { DeployButton, Navigation, PoweredBy } from '@/components';
import { ContractReceipt, ContractTransaction, ethers } from 'ethers';
import { fetchSigner } from '@wagmi/core';
import abi from './../abi.json';
import { useState } from 'react';

import { useRouter } from 'next/router';
import Link from 'next/link';
const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const [deploying, setDeploying] = useState<boolean>(false);
  const [deployingError, setDeployingError] = useState<Error | null>(null);
  
  const router = useRouter();
  const deployButtonHandler: React.MouseEventHandler = async () => {
    try {
      setDeploying(true);
      setDeployingError(null);
      const signer = await fetchSigner();

      const contract = new ethers.Contract(
        '0x88c875606ae309172F89F231dF5A9Ffb5AD64994',
        abi,
        signer!,
      );
      const transaction: ContractTransaction = await contract.extractDiamond();
      const receipt: ContractReceipt = await transaction.wait();
      if (receipt.status === 1)
        router.push(`/page1?contract=${'0x88c875606ae309172f89f231df5a9ffb5ad64994'}`);
    } catch (error) {
      console.log(error);
      if (error instanceof Error) {
        setDeployingError(error);
        return;
      }
      setDeployingError(new Error(String(error)));
    } finally {
      setDeploying(false);
    }
  };

  return (
    <>
      <Head>
        <title>Diamod Bluprinter</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        <div className={styles.background}></div>
        <div className={styles.title}>
          <h1 className={styles.h1}>Simple, secure, and fast code begins here</h1>
        </div>
        <p className={styles.p}>
          Our web service provides a user-friendly and intuitive diamond constructor, empowering
          users to build diamonds that can be utilized in smart contracts. With our system, users
          can customize the properties of their diamonds, creating secure and tamper-proof
          registries that can protect their transactions. Whether you require a single diamond or
          multiple diamonds for a complex contract, our service delivers a versatile and reliable
          tool for creating diamonds that meet your specific needs.
        </p>
        <div className={styles.deployButton}>
          <DeployButton
            onClick={deployButtonHandler}
            deploying={deploying}
            error={!!deployingError}
          />
        </div>
        <div className={styles.poweredBy}>
          <PoweredBy />
        </div>

      </main>
      <footer className={styles.footer}>
        <div className={styles.subTitle}>
          <span className={styles.diamond}>Diamond Blueprinter</span> by{' '}
          <Link href={'https://twitter.com/ChainHackerClan'} target='_blank'>
            Chainhackers
          </Link>
        </div>
        <div className={styles.menuContainer}>
          <ul className={styles.ul}>
            <li className={styles.li}>Discord</li>
            <li className={styles.li}>GitHub</li>
            <li className={styles.li}>Team</li>
          </ul>
        </div>
      </footer>
    </>
  );
}
